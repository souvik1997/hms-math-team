mixin slide(type,time)
	div.item(class=type,data-limit=time)
		div.container
			div.carousel-caption
				if block
					block
				else
					p No content provided

mixin generateProblems(problems)
	+slide("active","0")
		p.rules
			strong General guidelines
			ul.rules
				li 15 seconds per number sense question
				li 45 seconds per general math question
				li 1 pt per number sense question
				li 2 pts per general math question
				br
				li Top 10 get candy
				li In addition, we will draw a random name from the top 50% of scores to get a king sized candy bar
				li Donâ€™t cheat
				li No maiming
				li No medieval torture devices allowed
				li Have fun
		a.btn.btn-large.btn-primary(onclick="startPresentation()")
			|Start!
		a.btn.btn-large.btn-danger.offset1(onclick="$('#myModal').modal()")
			|Answers
	each val in problems
		- type=val.type
		- content=val.content.replace(/\\plus/g,"+")
		- time = val.timelimit
		+slide("",time)
			p.lead
				if type=="mathjax" || type=="plaintext"
					h1
						|!{content.replace(/\\newline/g, '<br/>')}
				else if type=="image"
					img.problem(src=content)

mixin generateAnswers(problems)
	p
		ol
			each val in problems
				- ans = val.answer
				li
					|#{ans}

doctype html
html(lang=en)
	head
		title="HMS Math Team"
		meta(charset="utf8")
		meta(name="viewport", content="width=device-width, initial-scale=1.0")
		script(src="/static/jquery.js")
		link(rel="stylesheet", href="/static/bootstrap/bootstrap.css")
		link(rel="stylesheet", href="/static/bootstrap/bootplus-responsive.css")
		link(rel="stylesheet",href="/static/font-awesome.css")
		link(rel="stylesheet",href="/static/startup_code_social-buttons.css")
		script(src="/static/bootstrap/js/bootstrap.js")
		script(src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML")
		script(src="/static/jquery.knob.js")
		script(type='text/javascript').
			var curSlide = 0;
			var numSlides = 0;

			var totalTime = 0;
			var elapsedTime = 0;
			var interval = 100;
			var timerHandle = NaN;
			var hasPlayed = false;
			function nextSlide()
			{
				if (curSlide < numSlides)
				{	
					$(".carousel").carousel("next");
					curSlide++;	
					updateProgressbar();
					timerStartHelper();
				}
				else
				{
					timerStop();
					timerClear();
				}
			}
			function prevSlide()
			{
				if (curSlide > 0)
				{	
					$(".carousel").carousel("prev");
					curSlide--;	
				}
				updateProgressbar();
				timerStartHelper();
			}
			function timerStartHelper()
			{
				var t = parseInt($($(".item")[curSlide]).attr("data-limit"));
				if (t != 0)
					timerStart(t);
				else
				{
					timerStop();
					timerClear();
				}
			}
			function startPresentation()
			{
				if((navigator.userAgent.match(/iPhone/i)) || (navigator.userAgent.match(/iPod/i)) || (navigator.userAgent.match(/iPad/i))) {
					$("#redwarning")[0].play();
					$("#redwarning")[0].pause();
				}
				nextSlide();
			}
			function timerStart(time)
			{
				timerStop();
				timerClear();
				$("#countdown").css("color","#FFFFFF");
				$(".dial").trigger('configure',{
						fgColor: "#35FF59"
					});
				totalTime = time*1000; /* Convert to milliseconds */
				elapsedTime = 0;
				timerHandle = setInterval(timerTick,interval);
				$(".dial").knob({
					'min':0,
					'max':time,
				});
			}
			function timerStop()
			{
				if (timerHandle != NaN)
					clearInterval(timerHandle);
				$("#countdown").text(toFixed(0,3-Math.round(Math.log(interval)/Math.log(10))));
				timerHandle = NaN;
				hasPlayed = false;
			}
			function timerClear()
			{
				$('.dial').val(0).trigger('change');
			}
			/* http://stackoverflow.com/questions/2221167/javascript-formatting-a-rounded-number-to-n-decimals/2909252#2909252 */
			function toFixed(value, precision) {
				var precision = precision || 0,
				neg = value < 0,
				power = Math.pow(10, precision),
				value = Math.round(value * power),
				integral = String((neg ? Math.ceil : Math.floor)(value / power)),
				fraction = String((neg ? -value : value) % power),
				padding = new Array(Math.max(precision - fraction.length, 0) + 1).join('0');

				return precision ? integral + '.' +  padding + fraction : integral;
			}
			function timerTick()
			{
				$('.dial').val(Math.round(elapsedTime/totalTime * 100)).trigger('change');
				$("#countdown").text(toFixed((totalTime-elapsedTime)/1000,3-Math.log(interval)/Math.log(10)));
				if (elapsedTime > (3/4)*totalTime)
				{
					$("#countdown").css("color","#FF9B94");
					$(".dial").trigger('configure',{
						fgColor: "#FF9B94"
					});
					if (!hasPlayed)
					{
						$("#redwarning")[0].play()
						hasPlayed = true;
					}
				}
				if (elapsedTime > totalTime)
					timerEnd();
				elapsedTime += interval;2
			}
			function timerEnd()
			{
				timerStop();
				timerClear();
				nextSlide();
			}
			function updateProgressbar()
			{
				var ratio = Math.round((curSlide)/(numSlides) * 100);
				$(".bar").width(ratio+"%");
			}
			$(function(){
				curSlide = 0;
				numSlides = parseInt($(".bar").attr("aria-valuemax"));
				MathJax.Hub.Config({
					"HTML-CSS": { scale: 185}
				});
				$(".dial").knob();
			});
		link(href="/static/ubuntu-font.css")
		link(href="/static/opensans-font.css")
		link(rel="stylesheet" href="/static/responsive.css")
		style.
			img.problem
			{
				width: 850px;
			}
			.ipad img.problem
			{
				width: 750px;
			}
		script(src="/static/css_browser_selector.js")
	body
		audio(src="/static/alarm.wav",preload="audio")#redwarning
		div.modal.fade#myModal
			div.modal-dialog
				div.modal-content
					div.modal-header
						button.close(type="button",data-dismiss="modal" aria-hidden="true") &times;
						h4(class="modal-title") Answers
					div.modal-body
						+generateAnswers(indata)
					div.modal-footer
						button.btn.btn-default(type="button",data-dismiss="modal") Close
		div#container
			- num = indata.length;
			div.progress
				div.bar(role="progressbar",aria-valuenow="0", aria-valuemin="0", aria-valuemax=num style="width: 0%")
					span.sr-only			
			div.carousel.slide#carousel-1(data-interval="false",data-wrap="false",style="background-color:#585858")
				div.carousel-inner
					+generateProblems(indata)
					div.right-hack
						input(type="text",class="dial",data-displayInput="false",data-width="150",data-thickness=".16", data-fgColor="#35FF59")
					div.right-hack-text
						h2#countdown

			a(class="left carousel-control",onclick="prevSlide()")
				|&lsaquo;
			a(class="right carousel-control",onclick="nextSlide()")
				|&rsaquo;




